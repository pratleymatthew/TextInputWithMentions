// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package aqcommon.actions;

import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.webui.CustomJavaAction;
import aqcommon.proxies.StringItem;
import java.util.ArrayList;
import java.util.List;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class SplitToStringItemList extends CustomJavaAction<java.util.List<IMendixObject>>
{
	private java.lang.String ValueToSplit;
	private java.lang.String Delimiter;

	public SplitToStringItemList(IContext context, java.lang.String ValueToSplit, java.lang.String Delimiter)
	{
		super(context);
		this.ValueToSplit = ValueToSplit;
		this.Delimiter = Delimiter;
	}

	@java.lang.Override
	public java.util.List<IMendixObject> executeAction() throws Exception
	{
		// BEGIN USER CODE
		List<String> items = splitToStringList(
				this.ValueToSplit, this.Delimiter);
		
		java.util.ArrayList<IMendixObject> stringCollection = 
				new java.util.ArrayList<IMendixObject>();
		
		for(String item : items){
			IMendixObject stringItem = Core.instantiate(
					getContext(), StringItem.entityName.toString());
			stringItem.setValue(
					getContext(), StringItem.MemberNames.Value.toString(), item);
			stringCollection.add(stringItem);
		}
		
		return stringCollection;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 * @return a string representation of this action
	 */
	@java.lang.Override
	public java.lang.String toString()
	{
		return "SplitToStringItemList";
	}

	// BEGIN EXTRA CODE
	public static List<String> splitToStringList(
			String toSplit, String delimiter){
						
		List<String> list = new ArrayList<String>();
	
		// make sure we have a value to split
		if( toSplit != null && !toSplit.isEmpty()){
			// make sure we have a delimiter to split on
			if( delimiter != null && !delimiter.isEmpty()){
			
				String[] elements = toSplit.split(delimiter);
				for(String el : elements){
					list.add(el);
				}
			}
			else {
				// no delimiter - return a list with a single element
				list.add(toSplit);
			}
		}
		
		return list;
	}
	// END EXTRA CODE
}
